<?xml version ="1.0"?>

<!--Ant Script for create Build for SecurityManager-->
<project name="SecurityManager" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">

	<property name="base.dir" value="." />
	<property name="software.dir" value=".." />
	<property name="lib.dir" value="${base.dir}/src/lib" />
	<property name="src.dir" value="${base.dir}/src/java" />
	<property name="target.dir" value="${software.dir}/target" />
	<property name="src.classes.dir" value="${target.dir}/temp/classes/src" />
	<property name="test.classes.dir" value="${target.dir}/temp/classes/test" />
	<property name="local-ivy-repo.dir" value="${software.dir}/local-ivy-repo" />
	<property name="report.dir" value="${software.dir}/target/reports" />

	<property file="${software.dir}/SecurityManager/src/conf/sm.properties"/>

	<property name="generateforce" value="true" />
	<property name="junit.dir" value="${report.dir}/junit" />
	<property name="junit.report.dir" value="${junit.dir}/reports" />
	<property name="junit.classes.dir" value="${junit.dir}/classes" />
	<property name="code.coverage.report.dir" value="${junit.dir}/coverage-reports" />
	<property name="instrumented.classes.dir" value="${junit.dir}/instrumented-classes" />
	<property name="cobertura.home" value="${base.dir}/cobertura"/>
	<property name="cobertura.lib" value="${cobertura.home}/lib"/>
	<property name="test.dir" value="${base.dir}/test" />

	<property name="test.src.dir" value="${software.dir}/SecurityManager/test/unit/java/SecurityManager_dbunit/src" />
	<path id="junit.classpath">
		<pathelement location="src/lib/cobertura.jar" />
		<pathelement location="src/lib/jakarta-oro-2.0.8.jar" />
		<pathelement location="src/lib/asm-2.2.1.jar" />
		<pathelement location="src/lib/log4j-1.2.9.jar" />
	</path>

	<loadfile property="dist.revision" srcFile="./.svn/entries">
			<filterchain>
				<headfilter lines="1" skip="4"/>
			</filterchain>
	</loadfile>

	<target name="compile" depends="init,retrieve-ivy-files">
	
		<echo message="-----------------------"/>
	<!--
		<exec executable="cmd" >
		<arg value="java"/>
		<arg value="-version"/>
		</exec>
	-->

		<javac destdir="${src.classes.dir}" includes="**/*.*" debug="on" includeAntRuntime="false" target="1.5">
			<src path="${src.dir}" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</javac>

		<copy todir="${src.classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.ser" />
			</fileset>
		</copy>

	</target>
	<!-- sub tasks -->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<delete dir="${src.classes.dir}" />
		<delete dir="${test.classes.dir}" />
		<mkdir dir="${src.classes.dir}" />
		<mkdir dir="${test.classes.dir}" />


	</target>
	<target name="build_jar" depends="compile">

		<tstamp />
		<jar taskname="build_jar" jarfile="${local-ivy-repo.dir}/securityManager-${sm.jar.version}.jar">
			<fileset dir="${src.classes.dir}">
				<include name="**/*" />
			</fileset>
			<manifest>
			   	<section name="${sm.jar.details}">
			   	   <attribute name="Version" value="${sm.jar.version}"/>
			   	   <attribute name="Built-By" value="${sm.jar.creator}" />
				   <attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
			   	   <attribute name="SVN-URL" value="${dist.revision}" />
				</section>
			</manifest>
		</jar>

		<antcall target="build_code_zip" />

	</target>
	<target name="dist" depends="build_jar"/>

	<target name="build_code_zip">
		<copy todir="${dist.dir}">
			<fileset dir="${src.dir}" includes="**/*" />
		 </copy>
	</target>

	<!--ivy:retrieve related tags start here-->
		<property name="common.dir" location="${software.dir}/common" />


		<property name="bda-utils.dir" location="${target.dir}/bda-utils" />
			<property name="project.properties.file" value="${software.dir}/build/project.properties" />
			<property file="${project.properties.file}" />
			<import file="${bda-utils.dir}/bda-build-utils-${bda.version}.xml" />


			<path id="bda-utils.classpath">
				<fileset dir="${bda-utils.dir}">
					<include name="**/*.jar" />
				</fileset>
			</path>
			<path id="ivy.classpath">
				<fileset dir="${target.dir}/lib">
					<include name="ivy-2.0.0.jar" />
				</fileset>
			</path>

			<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.classpath" />
			<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"  classpathref="bda-utils.classpath"/>
			<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="bda-utils.classpath"/>

		<property name="ivy.settings.file" location="${common.dir}/ivy/cbiit-ivy-settings.xml" />
				<target name="ivy-settings">
					<property name="ivy.dep.file" value="${common.dir}/bda-download/ivy-bda.xml"/>
					<ivy:settings file="${ivy.settings.file}"/>
				</target>
			<target name="retrieve-ivy-files" depends="ivy-settings"  description="Updates the local ivy repository">
				<ivy:resolve refresh="true" conf="app_lib"/>
				<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]" conf="app_lib" />

			</target>

		<!--ivy:retrieve related tags end here-->

<!-- Test related targets commented since currently not used

	<target name="Generate_Report_Cobertura" depends="compile">
	 	<antcall target="instrument" />
		<antcall target="runJunit" />
		<cobertura-report srcdir="${src.dir}" destdir="${code.coverage.report.dir}" />
		<delete file="${instrumented.classes.dir}/cobertura.ser" />
	</target>

	<target name="instrument">
		<mkdir dir="${code.coverage.report.dir}" />
		<mkdir dir="${instrumented.classes.dir}" />

		<cobertura-instrument todir="${instrumented.classes.dir}">
			<ignore regex="org.apache.log4j.*" />
			<fileset dir="${src.classes.dir}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
				<exclude name="**/Mock*.class" />
			</fileset>

		</cobertura-instrument>
	</target>
	<taskdef classpathref="junit.classpath" resource="tasks.properties" />
	<target name="runJunit" depends="db_compile">
		<mkdir dir="${junit.report.dir}" />
		<delete>
			<fileset dir="${junit.report.dir}" includes="**/*" />
		</delete>
		<mkdir dir="${junit.report.dir}/Html_reports" />
		<junit printsummary="yes" haltonerror="no" haltonfailure="no" fork="yes">
			<formatter type="xml" />
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${base.dir}/cobertura.ser" />
			<batchtest todir="${junit.report.dir}/Html_reports">
      			<fileset dir="${test.src.dir}">
					<include name="**/TestAll.java"/>
			    </fileset>
			</batchtest>
			<classpath>
				<pathelement location="${lib.dir}" />
				<pathelement location="${test.src.dir}" />
				<pathelement location="${src.classes.dir}" />
				<pathelement location="${test.classes.dir}" />
				<pathelement location="${instrumented.classes.dir}" />
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</junit>
		<junitreport todir="${junit.report.dir}/Html_reports">
			<fileset dir="${junit.report.dir}/Html_reports">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${junit.report.dir}/Html_reports" />
		</junitreport>
	</target>
	<target name="compileTest">
		<javac destdir="${test.classes.dir}" includes="**/*.*" debug="on" includeAntRuntime="false" target="1.5">
			<src path="${test.src.dir}" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
				<pathelement location="${src.classes.dir}" />
			</classpath>
		</javac>
		<copy todir="${test.classes.dir}">
			<fileset dir="${test.src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.ser" />
			</fileset>
		</copy>
	</target>


	<target name="db_compile">

			<delete file="${db_lib.dir}/securityManager.jar"/>
			<copy todir="${db_lib.dir}">
				<fileset dir="${lib_dir}" >
					<include name ="*.jar"/>
				</fileset>
			</copy>
			<jar destfile="${db_lib.dir}/securityManager.jar" duplicate="preserve">
				<fileset dir="${tmp.smwar}/WEB-INF/classes">
					<include name="**/*.*"/>
					<exclude name ="dbutil.properties"/>
					<exclude name ="log4j.properties"/>
					<exclude name="**/ApplicationSecurityConfig.xml" />
				</fileset>
			</jar>

			<javac destdir="${db_temp.dir}" srcdir="${db_src.dir}" includes="**/*">
				<classpath id="DbUnit_classpath2">
					<fileset dir="${web_lib.dir}">
						<include name="*.jar"/>
					</fileset>

					<fileset dir="${db_lib.dir}">
						<include name="*.jar"/>
					</fileset>
					<!-pathelement path="${tmp.smwar}/WEB-INF/classes/"/ ->
				</classpath>
			</javac>

			<copy todir="${db_temp.dir}">
				<fileset dir="${db_unit.dir}/src" >
					<include name ="*.xml"/>
					<include name = "*.properties"/>
				</fileset>
				<fileset dir="${base.dir}">
					<include name="TestDataSet.xml"/>
				</fileset>
			</copy>
		</target>
-->

</project>